# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
defaults: &defaults
  working_directory: ~/repo
  docker:
    # specify the version you desire here
    - image: circleci/node:7.10

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/mongo:3.4.4
jobs:
  build:
    <<: *defaults
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory
          root: ~/repo
          # Must be relative path from root
          paths:
            - ./**/*

  unit-test:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run: mkdir ./junit
      - run:
          command: yarn run unit-test
          environment:
            MOCHA_FILE: ./junit/mocha/test-results.xml
          when: always
      - store_test_results:
          path: ./junit
      - store_artifacts:
          path: ./junit

  integration-test:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run: mkdir ./junit
      - run:
          command: yarn run integration-test
          environment:
            MOCHA_FILE: ./junit/mocha/test-results.xml
          when: always
      - store_test_results:
          path: ./junit
      - store_artifacts:
          path: ./junit


  acceptance-test:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run: mkdir ./junit
      - run:
          command: yarn run acceptance-test
          environment:
            MOCHA_FILE: ./junit/mocha/test-results.xml
          when: always
      - store_test_results:
          path: ./junit
      - store_artifacts:
          path: ./junit

workflows:
  version: 2
  commit:
    jobs:
      - build
      - unit-test:
          requires:
            - build
      - integration-test:
          requires:
            - build
      - acceptance-test:
          requires:
            - build
      - deploy:
          requires:
            - unit-test
            - integration-test
            - acceptance-test
